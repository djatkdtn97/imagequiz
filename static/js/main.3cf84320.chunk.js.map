{"version":3,"sources":["communication/customers.js","components/Login.js","data.js","components/Home.js","communication/questions.js","components/Quiz.js","components/Register.js","components/Menu.js","App.js","reportWebVitals.js","index.js"],"names":["customers","Login","props","useState","username","setUsername","password","setPassword","history","useHistory","Form","onSubmit","e","preventDefault","found","find","x","console","log","localStorage","setItem","onCustomerLoggedIn","push","pathname","state","Group","className","controlId","Label","Control","type","placeholder","value","onChange","target","Button","variant","flowers","name","picture","Home","flowerGrid","map","flower","to","Card","style","width","Img","src","Body","Title","Container","display","flexWrap","questions","imageSource","Options","ans","isCorrect","Quiz","SIZE","length","currentQuestion","setCurrentQuestion","finish","setFinish","score","setScore","useEffect","a","j","k","i","Math","floor","random","shuffle","Figure","Image","height","alt","Option","onClick","getNextQuestion","updateAnswerOnClick","Register","Menu","getItem","customer","setCustomer","Navbar","Brand","as","Link","Toggle","Collapse","Nav","removeItem","undefined","Text","App","isAuthenticated","setIsAuthenticated","Row","Col","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cf84320.chunk.js","sourcesContent":["\n\nlet customers = [];\n\nexport default customers;","import customers from \"../communication/customers\";\nimport { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nconst Login = (props) => {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n\n    let login = (e) => {\n      e.preventDefault();\n        let found = customers.find(x => x.username === username & x.password === password);\n        console.log(customers);\n        if (found) {\n          console.log(found);\n          localStorage.setItem('customer', username);\n          props.onCustomerLoggedIn();\n          history.push({pathname: '/', state: {username: username}});\n        }\n    }\n\n    let onUsernameChanged = (e) => {\n        setUsername(e.target.value);\n    }\n\n    let onPasswordChanged = (e) => {\n        setPassword(e.target.value);\n    }\n\n    return (\n    <Form onSubmit={login}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Username:</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\" value={username} onChange={onUsernameChanged} />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password:</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={onPasswordChanged} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Log In\n      </Button>\n    </Form>\n  );\n}\n\nexport default Login;","let flowers = [\n    {\n        name: \"Acacia\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/acacia.jpg\"\n    },\n    {\n        name: \"Alyssum\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/alyssum.jpg\"\n    },\n    {\n        name: \"Amaryllis\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/amaryllis.jpg\"\n    },\n    {\n        name: \"Aster\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/aster.jpg\"\n    },\n    {\n        name: \"Azalea\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/azalea.jpg\"\n    },\n    {\n        name: \"Begonia\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/begonia.jpg\"\n    },\n    {\n        name: \"Buttercup\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\"\n    },\n    {\n        name: \"Calluna\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/calluna.jpg\"\n    },\n    {\n        name: \"Camellia\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/camellia.jpg\"\n    },\n    {\n        name: \"Cardinal\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/cardinal.jpg\"\n    },\n    {\n        name: \"Carnation\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/carnation.jpg\"\n    },\n    {\n        name: \"Clover\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/clover.jpg\"\n    },\n    {\n        name: \"Crown Imperial\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\"\n    },\n    {\n        name: \"Daffodil\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/daffodil.jpg\"\n    },\n    {\n        name: \"Dahlia\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/dahlia.jpg\"\n    },\n    {\n        name: \"Daisy\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/daisy.jpg\"\n    },\n    {\n        name: \"Gladiolus\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\"\n    },\n    {\n        name: \"Lantana\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/lantana.jpg\"\n    },\n    {\n        name: \"Lily\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/lily.jpg\"\n    },\n    {\n        name: \"Lotus\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/lotus.jpg\"\n    },\n    {\n        name: \"Marigold\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/Marigold.jpg\"\n    },\n    {\n        name: \"Orchid\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/orchid.jpg\"\n    },\n    {\n        name: \"Primrose\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/primrose.jpg\"\n    },\n    {\n        name: \"Sunflower\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/sunflower.jpg\"\n    },\n    {\n        name: \"Tickseed\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\"\n    },\n    {\n        name: \"Tulip\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/tulip.jpg\"\n    },\n    {\n        name: \"Zinnia\",\n        picture: \"https://habahram.blob.core.windows.net/flowers/zinnia.jpg\"\n    }\n];\n\nexport default flowers;","\n\nimport { Card, Container } from 'react-bootstrap';\nimport flowers from \"../data\";\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n\n    //const [username] = useState('');\n    //const location = useLocation();\n\n    let flowerGrid = flowers.map(flower => (\n        <Link to={\"/quiz\"} >\n            <Card style={{ width: '18rem' }}>\n                <Card.Img variant=\"top\" src={flower.picture} />\n                <Card.Body>\n                    <Card.Title>{flower.name}</Card.Title>\n                </Card.Body>\n            </Card>\n        </Link>\n    ));\n\n    return (\n        <Container style={{display:\"flex\", flexWrap:\"wrap\"}}>{flowerGrid}</Container>\n    );\n}\n\nexport default Home;","\nconst questions = [\n    {\n        imageSource: \"https://habahram.blob.core.windows.net/flowers/lotus.jpg\",\n        Options: [\n            { ans: 'Lantana', isCorrect: false },\n            { ans: 'Daisy', isCorrect: false },\n            { ans: 'Lotus', isCorrect: true },\n            { ans: 'Carnation', isCorrect: false },\n        ],\n    },\n    {\n        imageSource: \"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\",\n        Options: [\n            { ans: 'Acacia', isCorrect: false },\n            { ans: 'Buttercup', isCorrect: true },\n            { ans: 'Aster', isCorrect: false },\n            { ans: 'Lantana', isCorrect: false },\n        ],\n    },\n    {\n        imageSource: \"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\",\n        Options: [\n            { ans: 'Crown Imperial', isCorrect: true },\n            { ans: 'Clover', isCorrect: false },\n            { ans: 'Lantana', isCorrect: false },\n            { ans: 'Marigold', isCorrect: false },\n        ],\n    },\n    {\n        imageSource: \"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\",\n        Options: [\n            { ans: 'Daffodil', isCorrect: false },\n            { ans: 'Clover', isCorrect: false },\n            { ans: 'Sunflower', isCorrect: false },\n            { ans: 'Gladiolus', isCorrect: true },\n        ],\n    },\n    {\n        imageSource: \"https://habahram.blob.core.windows.net/flowers/daisy.jpg\",\n        Options: [\n            { ans: 'Dahlia', isCorrect: false },\n            { ans: 'Daisy', isCorrect: true },\n            { ans: 'Primrose', isCorrect: false },\n            { ans: 'Orchid', isCorrect: false },\n        ],\n    },\n    {\n        imageSource: \"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\",\n        Options: [\n            { ans: 'Zinnia', isCorrect: false },\n            { ans: 'Marigold', isCorrect: false },\n            { ans: 'Lotus', isCorrect: false },\n            { ans: 'Tickseed', isCorrect: true },\n        ],\n    },\n];\n\nexport default questions;","import questions from \"../communication/questions.js\";\nimport { useEffect, useState } from \"react\";\nimport { Figure } from \"react-bootstrap\";\nimport React from \"react\";\n\n\n\nconst Quiz = () => {\n    const SIZE = questions.length;\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [finish, setFinish] = useState(false);\n    const [score, setScore] = useState(0);\n\n    const updateAnswerOnClick = (isCorrect) => {\n        if (isCorrect) {\n            setScore(score + 1);\n        } else {\n        }\n        const getNextQuestion = currentQuestion + 1;\n        if (getNextQuestion < questions.length) {\n            setCurrentQuestion(getNextQuestion);\n        } else {\n            setFinish(true);\n        }\n    };\n\n    let shuffle = (a) => {\n        let j, k;\n        for (let i = a.length - 1; i > 0; i--) {\n            j = Math.floor(Math.random() * (i + 1));\n            k = a[i];\n            a[i] = a[j];\n            a[j] = k;\n        }\n        console.log(\"shuffled\");\n    }\n\n    useEffect(() => {\n        shuffle(questions);\n    }, []);\n\n    if (finish) {\n        return (\n            <div>\n                You scored {score} out of {SIZE}\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <div>\n                    <div>\n                        <p>Your current score is : {score} </p>\n                        <p>Question {currentQuestion + 1}/{SIZE}</p>\n                    </div>\n                    <Figure>\n                        <Figure.Image\n                            width={171}\n                            height={180}\n                            alt=\"171x180\"\n                            src={questions[currentQuestion].imageSource}\n                        />\n                    </Figure>\n                </div>\n                <div>\n                    {questions[currentQuestion].Options.map((Option) => (\n                        <button onClick={() => updateAnswerOnClick(Option.isCorrect)}>{Option.ans}</button>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\nexport default Quiz;","import { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport customers from '../communication/customers';\n\nconst Register = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    //console.log(\"Hello\");\n    let saveCustomer = (e) => {\n        e.preventDefault();\n        customers.push({username: username, password: password});\n    }\n\n    let onUsernameChanged = (e) => {\n        setUsername(e.target.value);\n    }\n\n    let onPasswordChanged = (e) => {\n        setPassword(e.target.value);\n    }\n\n    return (\n        <Form onSubmit={saveCustomer}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Create a username:</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" value={username} onChange={onUsernameChanged}/>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Choose a password:</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={onPasswordChanged}/>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n                Register\n            </Button>\n        </Form>\n    );\n}\n\nexport default Register;","import { Navbar, Container, Nav} from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\n\nconst Menu = () => {\n    const [customer, setCustomer] = useState(localStorage.getItem('customer'));\n    //const location = useLocation();\n\n    let logoff = () => {\n        localStorage.removeItem('customer');\n        setCustomer(undefined);\n    }\n\n    // eslint-disable-next-line\n    useEffect(  //runs every time return is executed.\n        () => {\n            setCustomer(localStorage.getItem('customer'));\n        }\n    );\n\n    return (\n        <Navbar>\n            <Container>\n                <Navbar.Brand as={Link} to=\"/\">Practicum</Navbar.Brand>\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\">\n                <Nav.Link as={Link} to=\"/quiz\">Quiz</Nav.Link>\n                {\n                    customer ?\n                    <Nav.Link as={Link} to=\"\" onClick={logoff}>Log Off</Nav.Link>\n                    :\n                    <Nav.Link as={Link} to=\"/login\">Log In</Nav.Link>\n                }\n                <Nav.Link as={Link} to=\"/register\">Sign Up</Nav.Link>\n                {customer ?\n                    <Navbar.Text>\n                        Signed in as: {customer}\n                    </Navbar.Text>\n                : ''}\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    );\n}\n\nexport default Menu;","import Login from './components/Login';\nimport Home from './components/Home';\nimport Quiz from './components/Quiz';\nimport Register from './components/Register';\nimport Menu from './components/Menu';\nimport './App.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport { BrowserRouter as HashRouter, Switch, Route } from \"react-router-dom\";\nimport { useState } from 'react';\n\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  let onCustomerLoggedIn = () => {\n    setIsAuthenticated(true);\n  }\n\n  return (\n    <HashRouter>\n    <div>\n      <Container>\n      <Row>\n        <Col>Welcome to Imagequiz</Col>\n      </Row>\n      <Row>\n        <Col><Menu isAuthenticated={isAuthenticated}/></Col>\n      </Row>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home></Home>\n          </Route>\n          <Route exact path=\"/login\">\n            <Login onCustomerLoggedIn={onCustomerLoggedIn} />\n          </Route>\n          <Route exact path=\"/register\">\n            <Register />\n          </Route>\n          <Route exact path=\"/quiz\">\n            <Quiz />\n          </Route>\n        </Switch>\n        <Row>\n          <Col>Published by Brian Um</Col>\n        </Row>\n      </Container>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}